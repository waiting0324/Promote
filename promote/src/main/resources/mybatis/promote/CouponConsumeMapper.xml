<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.promote.project.promote.mapper.CouponConsumeMapper">

    <resultMap type="CouponConsume" id="CouponConsumeResult">
        <result property="couponId" column="coupon_id"/>
        <result property="consumerId" column="consumer_id"/>
        <result property="fundType" column="fund_type"/>
        <result property="storeId" column="store_id"/>
        <result property="storeType" column="store_type"/>
        <result property="consumeTime" column="consume_time"/>
        <result property="amount" column="amount"/>
    </resultMap>

    <resultMap type="java.util.LinkedHashMap" id="storeTotalAmt">
        <result property="totalAmt" column="sum(amount)" javaType="java.lang.Long"/>
        <result property="storeId" column="store_id" javaType="java.lang.Long"/>
    </resultMap>

    <resultMap type="java.util.LinkedHashMap" id="CouponConsumeHistory">
        <result property="couponId" column="coupon_id" />
        <result property="consumeTime" column="consume_time" />
        <result property="couponType" column="coupon_type" />
        <result property="amount" column="amount" />
        <result property="storeType" column="store_type" />
    </resultMap>

    <resultMap type="java.util.Map" id="CouponConsumeYesterday">
        <result property="consumerId" column="consumer_id" />
        <result property="couponId" column="coupon_id" />
        <result property="fundType" column="fund_type" />
        <result property="storeId" column="store_id" />
        <result property="consumeTime" column="consume_time" />
        <result property="storeType" column="store_type" />
        <result property="amount" column="amount" />
    </resultMap>

    <sql id="selectCouponConsumeVo">
        select coupon_id, consumer_id, fund_type, store_id, store_type, consume_time, amount from pro_coupon_consume
    </sql>

    <select id="selectCouponConsumeList" parameterType="CouponConsume" resultMap="CouponConsumeResult">
        <include refid="selectCouponConsumeVo"/>
        <where>
            <if test="consumerId != null  and consumerId != ''">and consumer_id = #{consumerId}</if>
            <if test="fundType != null  and fundType != ''">and fund_type = #{fundType}</if>
            <if test="storeId != null ">and store_id = #{storeId}</if>
            <if test="storeType != null  and storeType != ''">and store_type = #{storeType}</if>
            <if test="consumeTime != null ">and consume_time = #{consumeTime}</if>
            <if test="amount != null ">and amount = #{amount}</if>
        </where>
    </select>

    <select id="selectConsumptionList" parameterType="Long" resultMap="CouponConsumeResult">
        SELECT
            s.name storeName,
            c.coupon_id,
            c.consumer_id,
            c.fund_type,
            c.store_id,
            c.store_type,
            c.consume_time,
            c.amount
        FROM
	        pro_coupon_consume c
	LEFT JOIN _info s ON c.store_id = s.user_id
	WHERE c.consumer_id = #{id}
	ORDER BY c.consume_time
    </select>

    <select id="selectCouponConsumeById" parameterType="String" resultMap="CouponConsumeResult">
        <include refid="selectCouponConsumeVo"/>
        where coupon_id = #{couponId}
    </select>

    <insert id="insertCouponConsume" parameterType="CouponConsume">
        insert into pro_coupon_consume
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="couponId != null  and couponId != ''">coupon_id,</if>
            <if test="consumerId != null  and consumerId != ''">consumer_id,</if>
            <if test="fundType != null  and fundType != ''">fund_type,</if>
            <if test="storeId != null ">store_id,</if>
            <if test="storeType != null  and storeType != ''">store_type,</if>
            <if test="consumeTime != null ">consume_time,</if>
            <if test="amount != null ">amount,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="couponId != null  and couponId != ''">#{couponId},</if>
            <if test="consumerId != null  and consumerId != ''">#{consumerId},</if>
            <if test="fundType != null  and fundType != ''">#{fundType},</if>
            <if test="storeId != null ">#{storeId},</if>
            <if test="storeType != null  and storeType != ''">#{storeType},</if>
            <if test="consumeTime != null ">#{consumeTime},</if>
            <if test="amount != null ">#{amount},</if>
        </trim>
    </insert>

    <update id="updateCouponConsume" parameterType="CouponConsume">
        update pro_coupon_consume
        <trim prefix="SET" suffixOverrides=",">
            <if test="consumerId != null  and consumerId != ''">consumer_id = #{consumerId},</if>
            <if test="fundType != null  and fundType != ''">fund_type = #{fundType},</if>
            <if test="storeId != null ">store_id = #{storeId},</if>
            <if test="storeType != null  and storeType != ''">store_type = #{storeType},</if>
            <if test="consumeTime != null ">consume_time = #{consumeTime},</if>
            <if test="amount != null ">amount = #{amount},</if>
        </trim>
        where coupon_id = #{couponId}
    </update>

    <delete id="deleteCouponConsumeById" parameterType="String">
        delete from pro_coupon_consume where coupon_id = #{couponId}
    </delete>

    <delete id="deleteCouponConsumeByIds" parameterType="String">
        delete from pro_coupon_consume where coupon_id in
        <foreach item="couponId" collection="array" open="(" separator="," close=")">
            #{couponId}
        </foreach>
    </delete>

    <select id="getTotalAmtByStoreId" resultMap="storeTotalAmt">
        select
            sum(amount),
            store_id
        from
            pro_coupon_consume
        where consume_time &gt;= #{beginDate} and consume_time &lt;= #{endDate}
        group by store_id
    </select>

    <select id="transactionHistory" resultMap="CouponConsumeHistory">
        select coupon.coupon_id,coupon.consume_time,coupon.amount,coupon.store_type,consumer.coupon_type
        from pro_coupon_consume coupon inner join pro_consumer_info consumer
        on coupon.consumer_id=consumer.user_id
        <where>
            coupon.consume_time &gt;= #{startDate} and coupon.consume_time &lt;= #{endDate}
            <if test="storeType != null  and storeType != ''">and coupon.store_type = #{storeType}</if>
            <if test="consumerId != null">and coupon.consumer_id = #{consumerId}</if>
            <if test="storeId != null">and coupon.store_id = #{storeId}</if>
            <if test="couponType != null  and couponType != ''">and consumer.coupon_type = #{couponType}</if>
        </where>
        order by coupon.consume_time desc
    </select>

    <select id="queryYesterdayAllData" resultMap="CouponConsumeYesterday">
        SELECT consumer_id, coupon_id, fund_type, store_id, consume_time, store_type, amount
        FROM pro_coupon_consume
        WHERE consume_time Between #{beginTime} and #{endTime}
    </select>
</mapper>