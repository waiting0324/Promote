<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.promote.project.system.mapper.SysUserMapper">

    <resultMap type="SysUser" id="SysUserResult">
        <id property="userId" column="user_id"/>
        <result property="identity" column="identity"/>
        <result property="deptId" column="dept_id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="userType" column="user_type"/>
        <result property="email" column="email"/>
        <result property="mobile" column="mobile"/>
        <result property="status" column="status"/>
        <result property="delFlag" column="del_flag"/>
        <result property="loginIp" column="login_ip"/>
        <result property="loginDate" column="login_date"/>
        <result property="createBy" column="create_by"/>
        <result property="createTime" column="create_time"/>
        <result property="updateBy" column="update_by"/>
        <result property="updateTime" column="update_time"/>
        <result property="remark" column="remark"/>
        <result property="pwNeedReset" column="pw_need_reset"/>
        <association property="dept" column="dept_id" javaType="SysDept" resultMap="deptResult"/>
        <association property="consumer" column="user_id"
                     javaType="com.promote.project.promote.domain.ConsumerInfo" resultMap="ConsumerInfoResult"/>
        <collection property="roles" javaType="java.util.List" resultMap="RoleResult"/>
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id property="deptId" column="dept_id"/>
        <result property="parentId" column="parent_id"/>
        <result property="deptName" column="dept_name"/>
        <result property="orderNum" column="order_num"/>
        <result property="leader" column="leader"/>
        <result property="status" column="dept_status"/>
    </resultMap>

    <resultMap id="RoleResult" type="SysRole">
        <id property="roleId" column="role_id"/>
        <result property="roleName" column="role_name"/>
        <result property="roleKey" column="role_key"/>
        <result property="roleSort" column="role_sort"/>
        <result property="dataScope" column="data_scope"/>
        <result property="status" column="role_status"/>
    </resultMap>

    <resultMap id="ConsumerInfoResult" type="com.promote.project.promote.domain.ConsumerInfo">
        <id property="userId"    column="user_id"    />
        <result property="name"    column="name"    />
        <result property="birthday"    column="birthday"    />
        <result property="consumerStat"    column="consumer_stat"    />
        <result property="couponType"    column="coupon_type"    />
        <result property="couponPrintType"    column="coupon_print_type"    />
        <result property="printCode"    column="print_code"    />
        <result property="hostelId"    column="hostel_id"    />
        <result property="issueDate"    column="issue_date"    />
        <result property="receiveDate"    column="receive_date"    />
        <result property="updateTime"    column="update_time"    />
        <result property="createTime"    column="create_time"    />
    </resultMap>

    <sql id="selectUserVo">
        select u.user_id, u.identity, u.dept_id, u.username, u.password, u.email, u.mobile,
         u.status, u.del_flag, u.login_ip, u.login_date,u.create_by, u.create_time, u.remark, u.pw_need_reset,
        d.dept_id, d.parent_id, d.dept_name, d.order_num, d.leader, d.status as dept_status,
        r.role_id, r.role_name, r.role_key, r.role_sort, r.data_scope, r.status as role_status
        from sys_user u
		    left join sys_dept d on u.dept_id = d.dept_id
		    left join sys_user_role ur on u.user_id = ur.user_id
		    left join sys_role r on r.role_id = ur.role_id
    </sql>

    <select id="selectUserList" parameterType="SysUser" resultMap="SysUserResult">
        select u.user_id, u.dept_id, u.username, u.password, u.status, u.email, u.mobile
        u.del_flag, u.login_ip, u.login_date, u.create_by, u.create_time, u.remark, d.dept_name, d.leader from sys_user
        u
        left join sys_dept d on u.dept_id = d.dept_id
        where u.del_flag = '0'
        <if test="username != null and username != ''">
            AND u.username like concat('%', #{username}, '%')
        </if>
        <if test="status != null and status != ''">
            AND u.status = #{status}
        </if>
        <if test="phonenumber != null and phonenumber != ''">
            AND u.phonenumber like concat('%', #{phonenumber}, '%')
        </if>
        <if test="beginTime != null and beginTime != ''"><!-- 開始時間檢索 -->
            AND date_format(u.create_time,'%y%m%d') &gt;= date_format(#{beginTime},'%y%m%d')
        </if>
        <if test="endTime != null and endTime != ''"><!-- 結束時間檢索 -->
            AND date_format(u.create_time,'%y%m%d') &lt;= date_format(#{endTime},'%y%m%d')
        </if>
        <if test="deptId != null and deptId != 0">
            AND (u.dept_id = #{deptId} OR u.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE FIND_IN_SET
            (#{deptId},ancestors) ))
        </if>
        <!-- 資料範圍過濾 -->
        ${dataScope}
    </select>

    <select id="selectUserByUsername" parameterType="String" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.username = #{username}
    </select>

    <select id="selectUserById" parameterType="Long" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        where u.user_id = #{userId}
    </select>

    <select id="selectConsumerByIdentity" parameterType="String" resultMap="SysUserResult">
        SELECT
            u.user_id,
            u.identity,
            u.username,
            u.mobile,
            c.birthday,
            c.name,
            c.coupon_type
        FROM
            sys_user u
            LEFT JOIN sys_user_role ur ON u.user_id = ur.user_id
            LEFT JOIN pro_consumer_info c ON u.user_id = c.user_id
        WHERE
            u.identity = #{identity} and ur.role_id = 5
    </select>

    <select id="checkUsernameUnique" parameterType="String" resultType="int">
		select count(1) from sys_user where username = #{username}
	</select>

    <select id="checkPhoneUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, phonenumber from sys_user where phonenumber = #{phonenumber}
	</select>

    <select id="checkEmailUnique" parameterType="String" resultMap="SysUserResult">
		select user_id, email from sys_user where email = #{email}
	</select>

    <insert id="insertUser" parameterType="SysUser" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user(
        <if test="userId != null and userId != 0">user_id,</if>
        <if test="identity != null and identity != ''">identity,</if>
        <if test="deptId != null and deptId != 0">dept_id,</if>
        <if test="username != null and username != ''">username,</if>
        <if test="password != null and password != ''">password,</if>
        <if test="email != null and email != ''">email,</if>
        <if test="mobile != null and mobile != ''">mobile,</if>
        <if test="status != null and status != ''">status,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="pwNeedReset != null and pwNeedReset != ''">pw_need_reset,</if>
        create_time
        )values(
        <if test="userId != null and userId != ''">#{userId},</if>
        <if test="identity != null and identity != ''">#{identity},</if>
        <if test="deptId != null and deptId != ''">#{deptId},</if>
        <if test="username != null and username != ''">#{username},</if>
        <if test="password != null and password != ''">#{password},</if>
        <if test="email != null and email != ''">#{email},</if>
        <if test="mobile != null and mobile != ''">#{mobile},</if>
        <if test="status != null and status != ''">#{status},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="pwNeedReset != null and pwNeedReset != ''">#{pwNeedReset},</if>
            sysdate
        )
    </insert>

    <update id="updateUser" parameterType="SysUser">
        update sys_user
        <set>
            <if test="deptId != null and deptId != 0">dept_id = #{deptId},</if>
            <if test="username != null and username != ''">username = #{username},</if>
            <if test="password != null and password != ''">password = #{password},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="email != null and email != ''">email = #{email},</if>
            <if test="mobile != null and mobile != ''">mobile = #{mobile},</if>
            <if test="loginIp != null and loginIp != ''">login_ip = #{loginIp},</if>
            <if test="loginDate != null">login_date = #{loginDate},</if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            <if test="remark != null">remark = #{remark},</if>
            update_time = sysdate
        </set>
        where user_id = #{userId}
    </update>

    <update id="updateUserStatus" parameterType="SysUser">
 		update sys_user set status = #{status} where user_id = #{userId}
	</update>

    <update id="updateUserAvatar" parameterType="SysUser">
 		update sys_user set avatar = #{avatar} where username = #{username}
	</update>

    <update id="resetUserPwd" parameterType="SysUser">
 		update sys_user set password = #{password} where username = #{username}
	</update>

    <delete id="deleteUserById" parameterType="Long">
 		delete from sys_user where user_id = #{userId}
 	</delete>

    <delete id="deleteUserByIds" parameterType="Long">
        update sys_user set del_flag = '2' where user_id in
        <foreach collection="array" item="userId" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </delete>

    <insert id="insertUserByProWhitelist" parameterType="ProWhitelist" useGeneratedKeys="true" keyProperty="userId">
        insert into sys_user(
        <if test="whitelistTaxIdNo != null and whitelistTaxIdNo != ''">user_id,</if>
        <if test="whitelistAcct != null and whitelistAcct != ''">username,</if>
        <if test="whitelistPwd != null and whitelistPwd != ''">password,</if>
        <if test="whitelistName != null and whitelistName != ''">name,</if>
        <if test="whitelistPhone != null and whitelistPhone != ''">phonenumber,</if>
        <if test="whitelistAddr != null and whitelistAddr != ''">address,</if>
        create_by,
        create_time,
        update_by,
        update_time
        )values(
        <if test="whitelistTaxIdNo != null and whitelistTaxIdNo != ''">#{whitelistTaxIdNo},</if>
        <if test="whitelistAcct != null and whitelistAcct != ''">#{whitelistAcct},</if>
        <if test="whitelistPwd != null and whitelistPwd != ''">#{whitelistPwd},</if>
        <if test="whitelistName != null and whitelistName != ''">#{whitelistName},</if>
        <if test="whitelistPhone != null and whitelistPhone != ''">#{whitelistPhone},</if>
        <if test="whitelistAddr != null and whitelistAddr != ''">#{whitelistAddr},</if>
        'Trade-Van',
        sysdate,
        'Trade-Van',
        sysdate
        )
    </insert>

    <update id="resetPwd">
 		update sys_user set password = #{newPwd} where user_id = #{userId} and birthday = #{birthDay}
	</update>

    <select id="selectUserByIdentityAndBirthday" resultMap="SysUserResult">
        SELECT
            u.user_id,
            u.identity,
            c.birthday
        FROM
            sys_user u
            LEFT JOIN pro_consumer_info c ON u.user_id = c.user_id
        WHERE
            u.identity = #{identity} and c.birthday = #{birthday}
    </select>

    <select id="getByUnameIndentity" resultMap="SysUserResult">
        <include refid="selectUserVo"/>
        <where>
            <if test="username != null  and username != ''">and username = #{username}</if>
            <if test="identity != null  and identity != ''">and identity = #{identity}</if>
        </where>
    </select>

</mapper>